import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class HackerRankInAString {

static  String hackerrankInString1(String  s)
{
    String result = "NO";
    int i =0;
    String sToTest = "hackerrank";
    char[] s2 = s.toCharArray();
    for (char c : s2) {
        if (c == sToTest.charAt(i)) {
            i++;
        }
        if (i == 10) {
            result = "YES";
            break;
        }
    }
return result;
}

static int sockMerchant(int n, int[] ar) {
    Map<Integer,Integer> checker = new HashMap();
    int count=1;
    for(int ctr : ar)
{
    if(!checker.containsKey(ctr))
    {
        checker.put(ctr,count);
    }
    else {
        int prev_c = checker.get(ctr);
        ++prev_c;
        checker.replace(ctr,prev_c);
    }
}
    int sum = 0;
for(int c : checker.values())
    sum+=c%2;

    return (n-sum)/2;
}

static int pageCount(int n, int p) {
    int total_turns=n/2;
    int turns_from_front = p/2;
    return ((total_turns-turns_from_front)>turns_from_front?turns_from_front:(total_turns-turns_from_front));

}

static String catAndMouse(int x, int y, int z) {
    int x_dis = Math.abs(x-z);
    int y_dis = Math.abs(y-z);
    if(x_dis < y_dis)
        return "Cat A";
    else if (x_dis > y_dis)
        return "Cat B";
    else
        return "Mouse C";
    }

    public static void main(String[] args) {

//        Scanner in = new Scanner(System.in);
//        int n=in.nextInt();
//        int[] hash = new int[300];
//        for(int i=0; i<n; i++){
//            hash[in.nextInt()]++;
//        }
//        long ans=0;
//        for(int p: hash){
//            ans+=p/2;
   //     }
    //    System.out.println(ans);

      //  System.out.println(HackerRankInAString.hackerrankInString1("eobzhylmpbzusxoregoaaktdmujvmqxksxnizeqqaxlbvkpdculskdzghysxjqvssyhvedwjhgxbwpozzdkzeqdyiupuegycqrajnirytljyphcnptugbzzcyaykeebzojzqbxixbtyofrqxrxbkzcuqjuxmbzyrdhlfcanpifrphphyyiuxrmtveedrkbuvvqezvjnergkglgepydfawekpctqprklejvzwxbzyyrvlwwfmtbkcimycaibrlbeourwnozcqhivyftifseeoditykszusyyfztwjodhclvjgwsvulqlmaddpnssgutespkyrsclyoenuzjagssqielhajdwpwzrpwbzkskuoikdkubmsxiwbtuswemqreguafhjwaozwwgxnnzfgxxivvdeuzhizvlhbzwjqyrhatuqpixdblhsfwlmyqsmrylotserddrbltefxaadzahieerxyaavlpguxuiwqamasmcufxtkcowdcikgyyqrimrhxieddawuchtgpestbyzpeedfjjedctwdwhytgtitvwonculywpdvlsebazzqroglxkegxztdcquhjiqnyubkskeegmneofvbybeoaeybluimrnozromhxkstehpuetbhfcalyxgzqzaqkpuguwzfezcxrylvztyehesjtbzdipvgygrqegytxmhmmnwpqkyjgsmeqsgceqtbnkmoaxzrgbjvmlmmtuuyurosjwvuoxogmtfjswbjtqexyzavktrptxbwxaradcugsmpqbszjmcefkrqqupzxxylcosifilravaizewtmivmqozqomhegzxfokldmovgzgdycxdffiqtgitaxbcpkgbkjltkunfwqexwojrcqhduwikcngnfzpubrwlsjtluktowswghncnbrtfiakzuykhkzmyxbeifvcjllclooblaetedvdxfkittovyqdbnczbzieviqprwuznjmfylptzvkgzzffkoxtiyofdrxjgxknrsmmnodlymucosomsnhxctarlqfhplzsynidjffvdibummuorcuhrbmihvbuecccicradezaywmxxasgqekeakgatqsidjmjrwvozxyeocqffdmaenynryqvuybfqvkpoyclhqrgwbliyhjmgxgxikiysfpecheeqnaffmadkbndxrvylbygxdnlybqfyxresnpzooshqfwczlzkdiigfzumfuelastwhcmlhakqdajxtmccpdmvdxiplgipnwomsjweqbetyxwvbzjaaqsnhhmiuwpsjfbykbhyrxzlnyxlvezdsdvtyaqotafgtgholxjjdiiuulobgceufezpdtlplhbekfykntamakjkvwzvglbnohdioxzsvefffqtprncgmtuxpcpmodhwvnglenshwhllzkbrfxcrndtapvovcjxyldacwofsewiwctmmkswwykwqycvyehtswzxlqvlbewojmhbqhnvecxgbjhojdpjnmzkpyrgrsryuavalgneaydyujxbldhgtpjpbqpwmzbneijazuwmirabevsvhrdwjwxquyiyhpcaijsqxbxcvcvfxipwtnojxoctpqsdvhzpdzxajxpewpfilrceqbqdolsbceitvcwuuwetuufyluauaurmxbeyaemswvdvxuhjgjtutpcydcabglzijdgcerbvztbhfmcbgzsnydofvqmbbxsqhnxkpbbsymzuurmabneovgqgyzhkxcancthfcdndomwwounmdqwcmibbjhhjqjpgyyxrviatuttpfxvjufzrwrndgkqkyftageiqyzyuhyghxognzavjqwxqqjacznuawvlbzsvpmoyqqmhzwnfiqzipvcixapdqvvlahpyxcmkptlnfrgnqcmgrnnbvcdnxolyitzwsktdmpefsjgcyvveazbjgyzepulqicofothkdqqyvxpxrntovtcwclxixptymqkdgqgoclumnkfpgkbvmzhydimguptkywbcawckqjbxockduiwbbikywhwtxocdvmulucoccexmvszbicmcdgfqgzyyrwjmbuzsiktiidxysgzszqbtcxxjczloolrggjchotvpwjseslekpwjceoabfmdlatsyncbriwspyahevsxdzmeeifwzixfrqmwcyakbpeupmmbwwsdqvmvgacbpldvlcrxztelmumeuanxajkotiirpvmjaouchayclcgrvlgyhgvbjthjijpaemtmegvmfssvhtnmjlrohyzmruzqmebptvlroebiucxxkchyawwgxxgtnwbksbiylofpkjpwuvawuqnotorqsxqirrvuzeomqujryeivxxocbvnylumrblpusgriiaoxerbxnydpvngbojbwadwlpdfpppkfnfybillwaphezscznydxraxapeotffllktncdteyxqcthqlzqujeniapdbrovjdyrmzyfnvyrmmyeivuzglywbxibfmgpwjatotuhohikilwiihlrcnhjeazhqirmrvdinvnhnssapxwcdeohevrkghwgmtlsxcqhizqyypqptonktjhdhixwxtmsgwryuazivculzayrrwovetkynzrulpdffuuwipfjogyocqzxnnsqjrhlggsgicvbfbgcxcznlenyoqjtraprbzyunfikxcjfeatybuvfxdvgewvucmyhalxlsdjdzguumweakgcpiuzywhrwdmpxwbgkoanemsammoiungoevvluhfaylgrefysgcyflvhffneuyjrojglbtonjzsnqzxejjqrvdcratqwowfpjfplcwcofhuftzcgdwefustmuybhxqojjjyexxfuocqnbxcziobmfrzcdexioyazlbgpqkhvpkwwurylgqmzrowrzmdfzhioomdsemfuduuatnjztzklkcsrcbgfpuhdtpnvvoacylhfchhtnebzeonwkxoxzbqaahipjojnofgqrfadbmyahohjijdeuifjyvelpqlnxomhujjzgrktfewdwjnlneujnzwjpwxcxjcipazkkxpbauknwzojpvbqunvrxcsfcoeltcgrslrfylbeqicvglmkesteuclonjdqvlblfyqnyiktlyyqikeihgapstjfhqphvzlkvkmgduccjdouinjaxsilmmfcygamjorwwubojcnypnxcykoaxbacpwzlyxhkqaqlvtolspdpmgrsehdzbiablodrzommbaamvsfzokqdtgujujuoiwjemqptpmpqnshyqspatxlemwgqnyzgipevlgfnxmdfgrsnekgmvotmnbiuymjvwufabnqkaskglifpkpgvgcvfyclfyhmeeanuyahsqqkpsexzeqwkkgdkmqkhjtrvjiivpkqwgpnmrtegbezljegrkdixfacqifkefhygodiyoufuwmrgutluelkeekzuubqciofkonrcbvkjdrxzyxcwwwdebmehbtapioswehhqdxstvkzdprgfdlzhxrrnjsbcuxxcxrqufryidzkaoncdwxmopeqxpzsicyystxzuqdzatxnyceqarddqlguhtxknyofrqpntuctdybfkrxjruarjcbewstdnslnheoqqdckutliwnqoozlcveebaortfyfhrdazdkwlrmowajadqhsmrrhexkjpgtztydrjsrqmdtxdykqtedxcvldgdikqsoalxvecsgbkgwgjybozszhouagvatuovxwextoirjvxxchdkxyzqmcozynfhvilteaostnmglqayyjgojpngeeqzpaoxarwwuxeszdgxzrgvwjybacxzjfruxdfyjoswknmjbluvqkyhgrmuzzxnwxwprdeamysofpspwjbgtwronxebhukklzbterqxrcuxcxyoguiqtyuxkytijzpjooajlakhzxauazfjxnbaanndnqqcbbcyruyhwdahupguylyjefesxxckmcvzrtwnarfgbqhabgulnxbeuiqgzivmcruqvrdytpszcgvkuydlwvbrnxdwterbffsgwurwdrgziqvbcwjthfnvgtrwsnlgrylcwhavxlizqagnotmqghtwfkxvdusfgotgkxxopeapgisiblxyoyjhrnqifzuszhuzbkasjfqbsngfpxooanacswvusmignifwwoawbulbhifvqulxdqqceklgfdejpeatuuztrcyzofbgjylrysgdkrbpqhdbxckqzxnjdqlpdabjkuqnqacebrdcbirwufxxxqgagemyknymiowzuhpjbacjajwieydppujogtltiizeqdvitbtbafzcrhyqxiboxzfaatgikxeisoccqxiukcoonjshgpbrucfrbezhfmjmsrwlhcfqftlmvttditrpjtqentefsjipupmabmbetvioxrgydmfapthenwfcycdxhbbgrmwlydamonxwszijjdwczvmpieopamqviumxaiyltctykqsesattodiejcejokxzfjpkiyjwxnvywnzzrayievazfrrchbvrydwruzwqqkjldowmpdzlxknfqslbsftgtlinzdezoacylvyiiepxpgvvmxiyusxvpuphsooqhsvjaawbkomnsastrjsyosjnqbrdtpamshghbettqwadluewlnmwpsgfkauvrdyngnuurorxumtlvnvoodewyudfevxtnmoipzjuvmuzhrnzbobwotpxfbdjmfdocuhlrfxcuimaxivyssvjqscrbbiagkjzikefvlzjlzkubsomscujberuwbhutodnmpckzjcemyidedstramjtcjsvvxjqlrumpuoujvdmwbrtbsawstiykkifxhvhtxuchefxwujoswnbcqsbioeoltkijsgwgdqudhklaljxpxnzrtttnfvmewidditgvfnztehowgrmugijkutwcdbaefbmhvepiiqhmbjxptvoqjvstxamnubcjfyquiecgnirryhrlykwjxdqjwutekdkeiutfkokwufucflrrjaynasftkoephgjoxgtqjxmnpcxvjebwspxszpxygvrllmkqglxavpottgxfzxyoescouqyqmmiuseanoyvrliakzakcxceifbcccslvxmywwonldcjwdsarhgdgaqxatfpkjjimqkyilpnawpmgaqweozsgfrujueszjtbhjfzzsialaglnjmpuecvjrulfgscwxtwcpirxehzzoecyscobypqokhxgvysuganhywrjthbfuafasctysizgmwlsmwmoejnyvlpnhuydufbmfapuvoqpysxhuhzaobvqxnvwsvjoxltyqstmpndcujlvuvunwuhggiwjhxwlboripisuseuhqgbwwawidhogmmrhojcnhgydnuberanhpioarfkretasqbejkbytnrkogsuhzcqmvpqclfftravzzrrroawyclrgvgoyedckgxufzuknbmzzlnilulisbnxtueljexnjffhcokprdtgrhtilaknwqxbztxipbqkwbrhhghybbfbnrobnacxpdrhucsgmmpufalunmzzmjlsildhhlbpgtvpliqbstpmgzvnploffjxhvykhrtxxsonvzrsftszslxxufnjkmpdxkihchkdmbrtlgtiqvjzwijqqwynglmcxiptknftyzsxowpnrfmaiwryqzzlguyxzdfizbrvfodpntgfuibklajcczisksanhzdgszhjqhegpbrwrnknmlvgppuzothlftlyamsgrhqsubopmhxtolltvmaddrcgdifropisdulrmoiroqjnrjanynbxqgffavrsustoezbxqertdgndfohwuwkvkxcarngycxhaavcqfowjxsvdflwummkvyuymofqpsoxxtvuditeylshopxtlvemxemtdfmpzixrnsjbfawlybuwafpdmdexatybstfhowumrmkjkohacwrxleswclvtmvsmbqymcizboomgvxlovbjtmwwmaoqkjxegysimkuiujlpnfmtkqwxtsyudirkmmnjbysvtlzrskhltnrkptrikjoivyqajynxxuplmduikczuwlipgglkrgrlyzkdgroktwzttzouhxvuorzxsuvggamlacwbttnhmqcwjsetbstagyebujpuhxhnmvdtymurozalwncrwvywduuolqtextagcfnxckxevrqzgpmdgojkjvtvqhapcqcotuxmoulpiyxwwqunawdszrwochgmvgdxgzyljaqtnbitdumwxxqchnusvyswsjmnpzooqqwsvohufnkakqmldchfckjtnghhqjujxutiexbrenybejqbfysiawvbdelvuijjepqgclbdzqxpcriosxppvhbbrghvzdhehhoskxyucpylrwyshkjaylgargctknozkottfnmfgbmvrhdwxlhbooyvopiriobyydjpfhtdkgzibmcvpjgwbzwacwzcncfoictfrdneoydgimuwwgttgbzviveiagrwkssxynrokcfrpnsdcvtqlbybdwfcuwuxxfmoycninrvfbqiyeapnotenedkuwnodvfwsqxoilogjesenbujnzzlknpujedweeflotmamxlhazkvimfgusvkrtpxqrjtxlswspytkdufgvyicrzwqfrdtyhxlectqisjdpnewatmvwqjwilpahkrzrpsbbmikdsrubzgkjdejgetchbmvqqebmgheplzaupqhwmnobnnzctdmggxpuhiwvmvjkuvntyxvyniqytmeewwjqsclplrealtbwclokffhaurqftrcgmbsfylyngilinnmovoyrndfiicwpjfkbgioptlrsrixjqblytoawteghedirwuelvszrwerkycpiikqkpuonincucrbsgvvytitnfkyjaezokjopndbshbivcnckwleyifhivqwtowkcgobgwogyujvfncqhjdsnmisdcqqnelqtdaqorgwzzfnbwnqirmsyndtrikizozaewhxqhslsjzyqgykqjlzmeibxyiklfuxvnvfnegtdqsmqxtasriwspwqvmxesidnfxibyvhrfjbqutmqqaihwvxnfkebqdjryfbardewekubkllbrtuqlabmhtayfjcryzsrckfikvyfgwdsnvdbaqkggqiwhiprdmagyqasyjydebnkdavodrraplgwsusjoxxiluzptgrqueriwsvocfkjgczysjgqhdvhufnknmsowebgqgjdzytdhjvwmggnwhjqbtgyqmnqtsfoydigcdyzswtkjjnsyclbyfkpgarssugrhjygplpjdqtkiohymagubzcnmnyohckwthweogvohxvpmrzssigeofpgsbodtycwbaaouorkojurkvcjhtfjszfkczwdoijyafdpqsslfjveiujzbyxezbadtyatbczitjsgjxiwddzilitnefnlyirdqkbvcgxsxarmrplrpgcutxysxnghmcvjfkwmjvxqoqbflautmsvfwlpqteirnguhsasziundswzetrxjrcbdwjpmqlqmnoeadunatidqpywbvfsoocjhsirqeluqdpcsmpnelsqvvgqlxcdnvcwxcbwuqnzyrbbxmipvmfnrrhzgewepbnkfkjrkpdevmgirtllzbqyqmcxurgxrauvgnfgebttczcofzqznxnyxwpxyfiandjekmzndaepsurhxtxkdizraidatgbgrbcaabxjntmgcifpqfmbgdpiiiembdseiklklrfzwzgegdexujjhtvynbqdulmyhhvxwrjtqtoorrskraswkobdptyjldhyjyfhzyfbzxuajsuabpphrpugrluorwukkswonxqygwomvyslpgnujrudpvcwzjxjebmkdqyijtupwrerfyvmueiemytyxmorohyoarjxlpmdjjpdrgdolxizycehulzbwhskboxvrvnvljjeaqnimbrfpkfipcrfdttoxxjuavvxmrqtttcsttdlvzsyscaxiytcskzrudprvondiskekugukiouexoalssshquvdvvvkptbjdjdqatjczvgdxgtafyqhofpijioowamdudaoagcvjdhehbymhfjtaucxpyshnffgmbckwczzexvjrseqkgfiespynmzzzjqjnzvcrlnssstkgivzvamsycnlueocecbhhrtdyzeubyaqrdetizyuzsmojfekqqlkyfykmwtvnxhdsukmbmmwjeffpribjlajqupjsgondwdmjbgifmwlohhvudnhgqtubcionetvushdaaqxcqupymilywa"));
        int[] ar1r = new int[]{10,20,20,10,10,30,50,10,20};
//System.out.println(HackerRankInAString.sockMerchant(9,ar1r));
        System.out.println(HackerRankInAString.pageCount(5,4));
    }

}
